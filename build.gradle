buildscript {
	configurations.classpath {
		resolutionStrategy.activateDependencyLocking()
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.0'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'com.diffplug.spotless' version '6.12.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencyLocking {
	lockAllConfigurations()
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2022.0.0")
	set('testcontainersVersion', "1.17.6")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.testcontainers:postgresql' // used in src code too
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.testcontainers:junit-jupiter'
}

dependencyManagement {
	imports {
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

spotless {
	// optional: limit format enforcement to just the files changed by this feature branch
	// ratchetFrom 'origin/main' --> for git, later enabled

	format 'misc', {
		// define the files to apply `misc` to
		target '*.gradle', '*.md', '.gitignore', '*.properties', '*.sql'

		// define the steps to apply to those files
		trimTrailingWhitespace()
		indentWithTabs() // or spaces. Takes an integer argument if you don't like 4
		endWithNewline()
	}
	java {
		// don't need to set target, it is inferred from java
		removeUnusedImports()
		importOrder()
		googleJavaFormat('1.15.0').reflowLongStrings()
		// If need customization, must use eclipse jdt
		// eclipse("4.9.0").configFile('spotless-config.xml')

		formatAnnotations()

		licenseHeader '/* (C)$YEAR */'
		target 'src/*/java/**/*.java'
	}

	json {
		target 'src/**/*.json'
		gson()
	}
}
